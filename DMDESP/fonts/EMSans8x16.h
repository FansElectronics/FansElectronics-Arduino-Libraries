/*
 *
 * EMSans8x16
 *
 *
 * File Name           : EMSans8x16.h
 * Date Created        : 23 Juni 2020
 * Date Updated        : 29 Juni 2020
 * Font width          : 8
 * Font height         : 16
 * Font first char     : 32
 * Font last char      : 127
 * Font used chars     : 94
 *
 * The font data are defined as
 *
 * struct _FONT_ {
 *     uint16_t   font_Size_in_Bytes_over_all_included_Size_it_self;
 *     uint8_t    font_Width_in_Pixel_for_fixed_drawing;
 *     uint8_t    font_Height_in_Pixel_for_all_characters;
 *     unit8_t    font_First_Char;
 *     uint8_t    font_Char_Count;
 *
 *     uint8_t    font_Char_Widths[font_Last_Char - font_First_Char +1];
 *                  // for each character the separate width in pixels,
 *                  // characters < 128 have an implicit virtual right empty row
 *
 *     uint8_t    font_data[];
 *                  // bit field of all characters
 */

#include <inttypes.h>
#ifdef __AVR__
#include <avr/pgmspace.h>
#elif defined (ESP8266)
#include <pgmspace.h>
#else
#define PROGMEM
#endif

#ifndef EMSANS8x16_H
#define EMSANS8x16_H

#define EMSANS8x16_H_WIDTH 8
#define EMSANS8x16_H_HEIGHT 16

/*
 * added to allow fontname to match header file name. 
 * as well as keep the old name for backward compability
 */

#define EMSans8x16 EMSans8x16

const static uint8_t EMSans8x16[] PROGMEM = {
    0x10, //8, // size 
	0x80, //128, // size of zero indicates fixed width font, actual length is width * height
    0x08, //8, // width
    0x10, //16, // height
    0x20, //32, // first char
    0x60, //96, // char count

	0x01, 0x02, 0x05, 0x08, 0x08, 0x08, 0x08, 0x02, 0x05, 0x05, // spasi  !	"	#	$	%	&	'	(	)
	0x05, 0x08, 0x04, 0x08, 0x04, 0x08, // *	+   ,	-	.	/	

    0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, // 0	1	2	3 	4	5	6	7	8	9

	0x04, 0x04, 0x08, 0x08, 0x08, 0x08, 0x08, // :	;	<	=	>	?	@

	0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x02, 0x08, // A	B	C	D	E	F	G	H	I	J
	0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, // K	L	M	N	O	P	Q	R	S	T
	0x08, 0x08, 0x08, 0x08, 0x08, 0x08,	// U	V	W	X	Y	Z

	0x04, 0x08, 0x04, 0x08, 0x08, 0x04, //	[	\	]	^	_	`

	0x08, 0x08, 0x08, 0x08, 0x08, 0x06, 0x08, 0x08, 0x02, 0x05,  // a	b	c	d	e	f	g	h	i	j
	0x08, 0x02, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x05,  //	k	l	m	n	o	p	q	r	s	t
	0x08, 0x08, 0x08, 0x08, 0x08, 0x08, //	u	v	w	x	y	z

	0x06, 0x02, 0x06, 0x08, 0x08, //	{	|	}	->	<-
    
    
	// font data			   |

	0x00, 0x00, // (space)
	0xff, 0xff, 0xcf, 0xcf, // !
	0x0f, 0x0f, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00,// "
	0x30, 0xff, 0xff, 0x30, 0x30, 0xff, 0xff, 0x30, 0x0c, 0xff, 0xff, 0x0c, 0x0c, 0xff, 0xff, 0x0c,// #
	0xf8, 0xfc, 0x8c, 0x8f, 0x8f, 0x8c, 0x8c, 0x0c, 0x30, 0x31, 0x31, 0xf1, 0xf1, 0x31, 0x3f, 0x1f,// $
	0x06, 0x0f, 0x0f, 0x86, 0xe0, 0x78, 0x1f, 0x0f, 0xf0, 0xf8, 0x1e, 0x07, 0x63, 0xf0, 0xf0, 0x60,// %
	0xfe, 0xff, 0x63, 0x63, 0x63, 0x63, 0x63, 0x00, 0x7f, 0xff, 0xc0, 0xc0, 0xc0, 0xfe, 0x7e, 0x06, // &
	0x0f, 0x0f, 0x00, 0x00, // '
	0xc0, 0xf0, 0x3c, 0x0e, 0x03, 0x03, 0x0f, 0x3c, 0x70, 0xc0, // (
	0x03, 0x0e, 0x3c, 0xf0, 0xc0, 0xc0, 0x70, 0x3c, 0x0f, 0x03, // )
	0x15, 0x0e, 0x1f, 0x0e, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00,// *
	0x80, 0x80, 0x80, 0xf8, 0xf8, 0x80, 0x80, 0x80, 0x01, 0x01, 0x01, 0x1f, 0x1f, 0x01, 0x01, 0x01,// +
	0x00, 0x00, 0x00, 0x00, 0xdc, 0xde, 0xfe, 0x7c, // ,
	0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,// -
	0x00, 0x00, 0x00, 0x00, 0x60, 0xf0, 0xf0, 0x60, // .
	0x00, 0x00, 0x00, 0x80, 0xe0, 0x78, 0x1f, 0x0f, 0xf0, 0xf8, 0x1e, 0x07, 0x03, 0x00, 0x00, 0x00,// /

	0xfe, 0xff, 0x03, 0x03, 0x03, 0x03, 0xff, 0xfe, 0x7f, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xff, 0x7f, //0	
	0x00, 0x06, 0x07, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0xff, 0xff, 0xc0, 0xc0, 0x00,	//1
	0x0e, 0x0f, 0x03, 0x03, 0x83, 0xc3, 0xff, 0x7e, 0xf8, 0xfc, 0xce, 0xc7, 0xc3, 0xc1, 0xc0, 0xc0,	//2
	0x0e, 0x0f, 0x03, 0x03, 0x83, 0x83, 0xff, 0xfe, 0x60, 0xe0, 0xc0, 0xc1, 0xc3, 0xc3, 0xff, 0x7e,	//3
	0x7f, 0xff, 0x80, 0x80, 0x80, 0x80, 0xff, 0xff, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 0xff,	//4
	0x7f, 0xff, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0x83, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xff, 0x7f,	//5
	0xfe, 0xff, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0x83, 0x7f, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xff, 0x7f,	//6
	0x03, 0x03, 0x03, 0x03, 0x83, 0xe3, 0x7f, 0x3f, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x03, 0x00, 0x00,	//7
	0x7e, 0xff, 0x83, 0x83, 0x83, 0x83, 0xff, 0x7e, 0x7e, 0xff, 0xc1, 0xc1, 0xc1, 0xc1, 0xff, 0x7e,	//8
	0xfe, 0xff, 0x03, 0x03, 0x03, 0x03, 0xff, 0xfe, 0xc1, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xff, 0x7f,	//9

    0x18, 0x3c, 0x3c, 0x18, 0x18, 0x3c, 0x3c, 0x18,	//:
	0x18, 0x3c, 0x3c, 0x18, 0x98, 0xbc, 0xfc, 0x78, //; 	
	0xc0, 0xe0, 0x70, 0x38, 0x1c, 0x0e, 0x07, 0x03, 0x03, 0x07, 0x0e, 0x1c, 0x38, 0x70, 0xe0, 0xc0, // <
	0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, // =
	0x03, 0x07, 0x0e, 0x1c, 0x38, 0x70, 0xe0, 0xc0, 0xc0, 0xe0, 0x70, 0x38, 0x1c, 0x0e, 0x07, 0x03, // >
	0x0e, 0x0f, 0x03, 0x03, 0xc3, 0xe3, 0x7f, 0x3e, 0x00, 0x00, 0x00, 0xdf, 0xdf, 0x01, 0x00, 0x00, // ?
	0xfe, 0xff, 0x03, 0xf3, 0xf3, 0x03, 0xff, 0xfe, 0x7f, 0xff, 0xc0, 0xc0, 0xcf, 0xcc, 0xcf, 0x4f, // @

	0xfe, 0xff, 0x07, 0x03, 0x03, 0x07, 0xff, 0xfe, 0xff, 0xff, 0x03, 0x03, 0x03, 0x03, 0xff, 0xff,// A
	0xff, 0xff, 0x83, 0x83, 0x83, 0xc3, 0xff, 0x7e, 0xff, 0xff, 0xc1, 0xc1, 0xc1, 0xc3, 0xff, 0x7e,// B
	0xfe, 0xff, 0x03, 0x03, 0x03, 0x03, 0x07, 0x06, 0x7f, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xe0, 0x60,// C
	0xff, 0xff, 0x03, 0x03, 0x03, 0x07, 0xfe, 0xfc, 0xff, 0xff, 0xc0, 0xc0, 0xc0, 0xe0, 0x7f, 0x3f,// D
	0xff, 0xff, 0x83, 0x83, 0x83, 0x83, 0x83, 0x03, 0xff, 0xff, 0xc1, 0xc1, 0xc1, 0xc1, 0xc1, 0xc0,// E
	0xff, 0xff, 0x83, 0x83, 0x83, 0x83, 0x83, 0x03, 0xff, 0xff, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00,// F
	0xfe, 0xff, 0x03, 0x03, 0x83, 0x83, 0x8f, 0x8e, 0x7f, 0xff, 0xc0, 0xc0, 0xc1, 0xc1, 0xff, 0x7f,// G
	0xff, 0xff, 0x80, 0x80, 0x80, 0x80, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x01, 0x01, 0xff, 0xff,// H
	0xff, 0xff, 0xff, 0xff, // I
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x60, 0xe0, 0xc0, 0xc0, 0xc0, 0xc0, 0xff, 0x7f,// J
	0xff, 0xff, 0x80, 0x80, 0xc0, 0xc0, 0x7f, 0x3f, 0xff, 0xff, 0x01, 0x01, 0x03, 0x03, 0xfe, 0xfc,// K
	0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0,// L
	0xff, 0xff, 0x0f, 0x7c, 0x7c, 0x0f, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff,// M
	0xff, 0xff, 0x0e, 0x38, 0xe0, 0x80, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff,// N
	0xfe, 0xff, 0x03, 0x03, 0x03, 0x03, 0xff, 0xfe, 0x7f, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xff, 0x7f,// O
	0xff, 0xff, 0x83, 0x83, 0x83, 0x83, 0xff, 0xfe, 0xff, 0xff, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00,// P
	0xfe, 0xff, 0x03, 0x03, 0x03, 0x03, 0xff, 0xfe, 0x7f, 0xff, 0xc0, 0xc6, 0xcc, 0xd8, 0xff, 0x7f,// Q
	0xff, 0xff, 0x83, 0x83, 0x83, 0xc3, 0x7f, 0x3e, 0xff, 0xff, 0x01, 0x01, 0x01, 0x03, 0xfe, 0xfc,// R
	0xfe, 0xff, 0x83, 0x83, 0x83, 0x83, 0x83, 0x03, 0xc0, 0xc1, 0xc1, 0xc1, 0xc1, 0xc1, 0xff, 0x7f,// S
	0x03, 0x03, 0x03, 0xff, 0xff, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00,// T
	0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7f, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xff, 0x7f,// U
	0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x07, 0x3f, 0xfc, 0xc0, 0xc0, 0xfc, 0x3f, 0x07,// V
	0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x3e, 0x3e, 0xf0, 0xff, 0xff,// W
	0x3f, 0x7f, 0x70, 0xc0, 0xc0, 0x70, 0x7f, 0x3f, 0xfc, 0xfe, 0x0f, 0x03, 0x03, 0x0f, 0xfe, 0xfc,// X
	0xff, 0xff, 0x80, 0x80, 0x80, 0x80, 0xff, 0xff, 0x60, 0xe1, 0xc1, 0xc1, 0xc1, 0xc1, 0xff, 0x7f,// Y
	0x03, 0x03, 0x03, 0x83, 0xc3, 0xe3, 0x7f, 0x3f, 0xfc, 0xfe, 0xc7, 0xc3, 0xc1, 0xc0, 0xc0, 0xc0,// Z

	0xff, 0xff, 0x03, 0x03, 0xff, 0xff, 0xc0, 0xc0, // [
	0x0f, 0x1f, 0x78, 0xf0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0f, 0x1e, 0xf8, 0xf0,// "\"
	0x03, 0x03, 0xff, 0xff, 0xc0, 0xc0, 0xff, 0xff, // ]
	0x18, 0x1c, 0x0e, 0x03, 0x03, 0x0e, 0x1c, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,// ^
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0,// _
	0x18, 0x3c, 0x3c, 0x18, 0x18, 0x3c, 0x3c, 0x18,// `

	0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0xf0, 0xe0, 0x7e, 0xff, 0xc3, 0xc3, 0xc3, 0xc3, 0xff, 0x7f,// a
	0xff, 0xff, 0x30, 0x30, 0x30, 0x30, 0xf0, 0xe0, 0x7f, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xff, 0x7f,// b
	0xe0, 0xf0, 0x30, 0x30, 0x30, 0x30, 0x70, 0x60, 0x7f, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xe0, 0x60,// c
	0xe0, 0xf0, 0x30, 0x30, 0x30, 0x30, 0xff, 0xff, 0x7f, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xff, 0x7f,// d
	0xe0, 0xf0, 0x30, 0x30, 0x30, 0x30, 0xf0, 0xe0, 0x7f, 0xff, 0xcc, 0xcc, 0xcc, 0xcc, 0xcf, 0xcf,// e
	0xfe, 0xff, 0xc3, 0xc3, 0xc3, 0x03, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, // f
	0xe0, 0xf0, 0x30, 0x30, 0x30, 0x30, 0xf0, 0xf0, 0xc7, 0xcf, 0xcc, 0xcc, 0xcc, 0xcc, 0xff, 0x7f,// g
	0xff, 0xff, 0x30, 0x30, 0x30, 0x30, 0xf0, 0xe0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff,// h
	0xf3, 0xf3, 0xff, 0xff, // i
	0x00, 0x00, 0x00, 0xf3, 0xf3, 0xc0, 0xc0, 0xc0, 0xff, 0x7f, // j
	0xff, 0xff, 0x00, 0x00, 0x80, 0x80, 0xf0, 0x70, 0xff, 0xff, 0x03, 0x03, 0x07, 0x07, 0xfc, 0xf8,// k
	0xff, 0xff, 0xff, 0xff, // l
	0xe0, 0xf0, 0xf0, 0xc0, 0xc0, 0xf0, 0xf0, 0xe0, 0xff, 0xff, 0x00, 0x03, 0x03, 0x00, 0xff, 0xff,// m
	0xe0, 0xf0, 0x30, 0x30, 0x30, 0x30, 0xf0, 0xe0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff,// n
	0xe0, 0xf0, 0x30, 0x30, 0x30, 0x30, 0xf0, 0xe0, 0x7f, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xff, 0x7f,// o
	0xf0, 0xf0, 0x30, 0x30, 0x30, 0x30, 0xf0, 0xe0, 0xff, 0xff, 0x0c, 0x0c, 0x0c, 0x0c, 0x0f, 0x07,// p
	0xe0, 0xf0, 0x30, 0x30, 0x30, 0x30, 0xf0, 0xf0, 0x07, 0x0f, 0x0c, 0x0c, 0x0c, 0x0c, 0xff, 0xff,// q
	0xe0, 0xf0, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,// r
	0xe0, 0xf0, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0xc3, 0xc7, 0xc6, 0xc6, 0xc6, 0xc6, 0xfe, 0x7c,// s
	0xff, 0xff, 0x30, 0x30, 0x30, 0x7f, 0xff, 0xc0, 0xc0, 0xc0,// t
	0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0x7f, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xff, 0x7f,// u
	0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0x0f, 0x3f, 0x7c, 0xe0, 0xe0, 0x7c, 0x3f, 0x0f,// v
	0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0x7f, 0xff, 0xf0, 0x3c, 0x3c, 0xf0, 0xff, 0x7f,// w
	0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0xf0, 0xf9, 0x0f, 0x06, 0x06, 0x0f, 0xf9, 0xf0,// x
	0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0xc7, 0xcf, 0xcc, 0xcc, 0xcc, 0xcc, 0xff, 0x7f,// y
	0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0xf0, 0xf0, 0xe0, 0xf0, 0xd8, 0xcc, 0xc6, 0xc3, 0xc1, 0xc0,// z

	0x80, 0xc0, 0xfe, 0x7f, 0x03, 0x03, 0x01, 0x03, 0x7f, 0xfe, 0xc0, 0xc0, // {
	0xff, 0xff, 0xff, 0xff,// |
	0x03, 0x03, 0x7f, 0xfe, 0xc0, 0x80, 0xc0, 0xc0, 0xfe, 0x7f, 0x03, 0x01,// }
	0x80, 0x80, 0x9c, 0x38, 0x70, 0xe0, 0xc0, 0x80, 0x01, 0x01, 0x39, 0x1c, 0x0e, 0x07, 0x03, 0x01,// ->
	0x80, 0xc0, 0xe0, 0x70, 0x38, 0x9c, 0x80, 0x80, 0x01, 0x03, 0x07, 0x0e, 0x1c, 0x39, 0x01, 0x01 // <-

};

#endif
