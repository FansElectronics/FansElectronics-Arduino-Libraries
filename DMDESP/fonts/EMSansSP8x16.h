/*
 *
 * EMSansSP8x16
 *
 *
 * File Name           : EMSansSP8x16.h
 * Date Created        : 23 Juni 2020
 * Date Updated        : 29 Juni 2020
 * Font width          : 8
 * Font height         : 16
 * Font first char     : 32
 * Font last char      : 127
 * Font used chars     : 94
 *
 * The font data are defined as
 *
 * struct _FONT_ {
 *     uint16_t   font_Size_in_Bytes_over_all_included_Size_it_self;
 *     uint8_t    font_Width_in_Pixel_for_fixed_drawing;
 *     uint8_t    font_Height_in_Pixel_for_all_characters;
 *     unit8_t    font_First_Char;
 *     uint8_t    font_Char_Count;
 *
 *     uint8_t    font_Char_Widths[font_Last_Char - font_First_Char +1];
 *                  // for each character the separate width in pixels,
 *                  // characters < 128 have an implicit virtual right empty row
 *
 *     uint8_t    font_data[];
 *                  // bit field of all characters
 */

#include <inttypes.h>
#ifdef __AVR__
#include <avr/pgmspace.h>
#elif defined (ESP8266)
#include <pgmspace.h>
#else
#define PROGMEM
#endif

#ifndef EMSANS8SPx16_H
#define EMSANS8SPx16_H

#define EMSANS8SPx16_H_WIDTH 8
#define EMSANS8SPx16_H_HEIGHT 16

/*
 * added to allow fontname to match header file name. 
 * as well as keep the old name for backward compability
 */

#define EMSansSP8x16 EMSansSP8x16

const static uint8_t EMSansSP8x16[] PROGMEM = {
	
    0x10, //16, // size 
	0x90, //144, // size of zero indicates fixed width font, actual length is width * height
    0x09, //9, // width
    0x10, //16, // height
    0x20, //32, // first char
    0x60, //96, // char count

	0x01, 0x03, 0x06, 0x09, 0x09, 0x09, 0x09, 0x03, 0x06, 0x06, // spasi  !	"	#	$	%	&	'	(	)
	0x06, 0x09, 0x05, 0x09, 0x05, 0x09, // *	+   ,	-	.	/	

    0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, // 0	1	2	3 	4	5	6	7	8	9

	0x05, 0x05, 0x09, 0x09, 0x09, 0x09, 0x09, // :	;	<	=	>	?	@

	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x03, 0x09, // A	B	C	D	E	F	G	H	I	J
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, // K	L	M	N	O	P	Q	R	S	T
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09,	// U	V	W	X	Y	Z

	0x05, 0x09, 0x05, 0x09, 0x09, 0x05, //	[	\	]	^	_	`

	0x09, 0x09, 0x09, 0x09, 0x09, 0x07, 0x09, 0x09, 0x03, 0x06,  // a	b	c	d	e	f	g	h	i	j
	0x09, 0x03, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x06,  //	k	l	m	n	o	p	q	r	s	t
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, //	u	v	w	x	y	z

	0x07, 0x03, 0x07, 0x09, 0x09, //	{	|	}	->	<-

    
    
	// font data			   |

	0x00, 0x00, // (space)
	0xff, 0xff, 0x00, 0xcf, 0xcf, 0x00,// !
	0x0f, 0x0f, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,// "
	0x30, 0xff, 0xff, 0x30, 0x30, 0xff, 0xff, 0x30, 0x00, 0x0c, 0xff, 0xff, 0x0c, 0x0c, 0xff, 0xff, 0x0c, 0x00,// #
	0xf8, 0xfc, 0x8c, 0x8f, 0x8f, 0x8c, 0x8c, 0x0c, 0x00, 0x30, 0x31, 0x31, 0xf1, 0xf1, 0x31, 0x3f, 0x1f, 0x00,// $
	0x06, 0x0f, 0x0f, 0x86, 0xe0, 0x78, 0x1f, 0x0f, 0x00, 0xf0, 0xf8, 0x1e, 0x07, 0x63, 0xf0, 0xf0, 0x60, 0x00,// %
	0xfe, 0xff, 0x63, 0x63, 0x63, 0x63, 0x63, 0x00, 0x00, 0x7f, 0xff, 0xc0, 0xc0, 0xc0, 0xfe, 0x7e, 0x06, 0x00,// &
	0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, // '
	0xc0, 0xf0, 0x3c, 0x0e, 0x03, 0x00, 0x03, 0x0f, 0x3c, 0x70, 0xc0, 0x00, // (
	0x03, 0x0e, 0x3c, 0xf0, 0xc0, 0x00, 0xc0, 0x70, 0x3c, 0x0f, 0x03, 0x00, // )
	0x15, 0x0e, 0x1f, 0x0e, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // *
	0x80, 0x80, 0x80, 0xf8, 0xf8, 0x80, 0x80, 0x80, 0x00, 0x01, 0x01, 0x01, 0x1f, 0x1f, 0x01, 0x01, 0x01, 0x00,// +
	0x00, 0x00, 0x00, 0x00, 0x00, 0xdc, 0xde, 0xfe, 0x7c, 0x00, // ,
	0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00,// -
	0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xf0, 0xf0, 0x60, 0x00, // .
	0x00, 0x00, 0x00, 0x80, 0xe0, 0x78, 0x1f, 0x0f, 0x00, 0xf0, 0xf8, 0x1e, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00,// /

	0xfe, 0xff, 0x03, 0x03, 0x03, 0x03, 0xff, 0xfe, 0x00, 0x7f, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xff, 0x7f, 0x00, //0	
	0x00, 0x06, 0x07, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0xff, 0xff, 0xc0, 0xc0, 0x00, 0x00,	//1
	0x0e, 0x0f, 0x03, 0x03, 0x83, 0xc3, 0xff, 0x7e, 0x00, 0xf8, 0xfc, 0xce, 0xc7, 0xc3, 0xc1, 0xc0, 0xc0, 0x00,	//2
	0x0e, 0x0f, 0x03, 0x03, 0x83, 0x83, 0xff, 0xfe, 0x00, 0x60, 0xe0, 0xc0, 0xc1, 0xc3, 0xc3, 0xff, 0x7e, 0x00,	//3
	0x7f, 0xff, 0x80, 0x80, 0x80, 0x80, 0xff, 0xff, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 0xff, 0x00,	//4
	0x7f, 0xff, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0x83, 0x00, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xff, 0x7f, 0x00,	//5
	0xfe, 0xff, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0x83, 0x00, 0x7f, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xff, 0x7f, 0x00,	//6
	0x03, 0x03, 0x03, 0x03, 0x83, 0xe3, 0x7f, 0x3f, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x03, 0x00, 0x00, 0x00,	//7
	0x7e, 0xff, 0x83, 0x83, 0x83, 0x83, 0xff, 0x7e, 0x00, 0x7e, 0xff, 0xc1, 0xc1, 0xc1, 0xc1, 0xff, 0x7e, 0x00,	//8
	0xfe, 0xff, 0x03, 0x03, 0x03, 0x03, 0xff, 0xfe, 0x00, 0xc1, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xff, 0x7f, 0x00,	//9

    0x18, 0x3c, 0x3c, 0x18, 0x00, 0x18, 0x3c, 0x3c, 0x18, 0x00,	//:
	0x18, 0x3c, 0x3c, 0x18, 0x00, 0x98, 0xbc, 0xfc, 0x78, 0x00, //; 	
	0xc0, 0xe0, 0x70, 0x38, 0x1c, 0x0e, 0x07, 0x03, 0x00, 0x03, 0x07, 0x0e, 0x1c, 0x38, 0x70, 0xe0, 0xc0, 0x00, // <
	0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x00, // =
	0x03, 0x07, 0x0e, 0x1c, 0x38, 0x70, 0xe0, 0xc0, 0x00, 0xc0, 0xe0, 0x70, 0x38, 0x1c, 0x0e, 0x07, 0x03, 0x00, // >
	0x0e, 0x0f, 0x03, 0x03, 0xc3, 0xe3, 0x7f, 0x3e, 0x00, 0x00, 0x00, 0x00, 0xdf, 0xdf, 0x01, 0x00, 0x00, 0x00, // ?
	0xfe, 0xff, 0x03, 0xf3, 0xf3, 0x03, 0xff, 0xfe, 0x00, 0x7f, 0xff, 0xc0, 0xc0, 0xcf, 0xcc, 0xcf, 0x4f, 0x00, // @

	0xfe, 0xff, 0x07, 0x03, 0x03, 0x07, 0xff, 0xfe, 0x00, 0xff, 0xff, 0x03, 0x03, 0x03, 0x03, 0xff, 0xff, 0x00,// A
	0xff, 0xff, 0x83, 0x83, 0x83, 0xc3, 0xff, 0x7e, 0x00, 0xff, 0xff, 0xc1, 0xc1, 0xc1, 0xc3, 0xff, 0x7e, 0x00,// B
	0xfe, 0xff, 0x03, 0x03, 0x03, 0x03, 0x07, 0x06, 0x00, 0x7f, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xe0, 0x60, 0x00,// C
	0xff, 0xff, 0x03, 0x03, 0x03, 0x07, 0xfe, 0xfc, 0x00, 0xff, 0xff, 0xc0, 0xc0, 0xc0, 0xe0, 0x7f, 0x3f, 0x00,// D
	0xff, 0xff, 0x83, 0x83, 0x83, 0x83, 0x83, 0x03, 0x00, 0xff, 0xff, 0xc1, 0xc1, 0xc1, 0xc1, 0xc1, 0xc0, 0x00,// E
	0xff, 0xff, 0x83, 0x83, 0x83, 0x83, 0x83, 0x03, 0x00, 0xff, 0xff, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00,// F
	0xfe, 0xff, 0x03, 0x03, 0x83, 0x83, 0x8f, 0x8e, 0x00, 0x7f, 0xff, 0xc0, 0xc0, 0xc1, 0xc1, 0xff, 0x7f, 0x00,// G
	0xff, 0xff, 0x80, 0x80, 0x80, 0x80, 0xff, 0xff, 0x00, 0xff, 0xff, 0x01, 0x01, 0x01, 0x01, 0xff, 0xff, 0x00,// H
	0xff, 0xff, 0x00, 0xff, 0xff, 0x00, // I
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x60, 0xe0, 0xc0, 0xc0, 0xc0, 0xc0, 0xff, 0x7f, 0x00,// J
	0xff, 0xff, 0x80, 0x80, 0xc0, 0xc0, 0x7f, 0x3f, 0x00, 0xff, 0xff, 0x01, 0x01, 0x03, 0x03, 0xfe, 0xfc, 0x00,// K
	0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0x00,// L
	0xff, 0xff, 0x0f, 0x7c, 0x7c, 0x0f, 0xff, 0xff, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00,// M
	0xff, 0xff, 0x0e, 0x38, 0xe0, 0x80, 0xff, 0xff, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0x00,// N
	0xfe, 0xff, 0x03, 0x03, 0x03, 0x03, 0xff, 0xfe, 0x00, 0x7f, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xff, 0x7f, 0x00,// O
	0xff, 0xff, 0x83, 0x83, 0x83, 0x83, 0xff, 0xfe, 0x00, 0xff, 0xff, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00,// P
	0xfe, 0xff, 0x03, 0x03, 0x03, 0x03, 0xff, 0xfe, 0x00, 0x7f, 0xff, 0xc0, 0xc6, 0xcc, 0xd8, 0xff, 0x7f, 0x00,// Q
	0xff, 0xff, 0x83, 0x83, 0x83, 0xc3, 0x7f, 0x3e, 0x00, 0xff, 0xff, 0x01, 0x01, 0x01, 0x03, 0xfe, 0xfc, 0x00,// R
	0xfe, 0xff, 0x83, 0x83, 0x83, 0x83, 0x83, 0x03, 0x00, 0xc0, 0xc1, 0xc1, 0xc1, 0xc1, 0xc1, 0xff, 0x7f, 0x00,// S
	0x03, 0x03, 0x03, 0xff, 0xff, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,// T
	0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x7f, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xff, 0x7f, 0x00,// U
	0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x07, 0x3f, 0xfc, 0xc0, 0xc0, 0xfc, 0x3f, 0x07, 0x00,// V
	0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0xff, 0xff, 0xf0, 0x3e, 0x3e, 0xf0, 0xff, 0xff, 0x00,// W
	0x3f, 0x7f, 0x70, 0xc0, 0xc0, 0x70, 0x7f, 0x3f, 0x00, 0xfc, 0xfe, 0x0f, 0x03, 0x03, 0x0f, 0xfe, 0xfc, 0x00,// X
	0xff, 0xff, 0x80, 0x80, 0x80, 0x80, 0xff, 0xff, 0x00, 0x60, 0xe1, 0xc1, 0xc1, 0xc1, 0xc1, 0xff, 0x7f, 0x00,// Y
	0x03, 0x03, 0x03, 0x83, 0xc3, 0xe3, 0x7f, 0x3f, 0x00, 0xfc, 0xfe, 0xc7, 0xc3, 0xc1, 0xc0, 0xc0, 0xc0, 0x00,// Z

	0xff, 0xff, 0x03, 0x03, 0x00, 0xff, 0xff, 0xc0, 0xc0, 0x00, // [
	0x0f, 0x1f, 0x78, 0xf0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0f, 0x1e, 0xf8, 0xf0, 0x00,// "\"
	0x03, 0x03, 0xff, 0xff, 0x00, 0xc0, 0xc0, 0xff, 0xff, 0x00, // ]
	0x18, 0x1c, 0x0e, 0x03, 0x03, 0x0e, 0x1c, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,// ^
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0x00,// _
	0x18, 0x3c, 0x3c, 0x18, 0x00, 0x18, 0x3c, 0x3c, 0x18, 0x00,// `

	0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0xf0, 0xe0, 0x00, 0x7e, 0xff, 0xc3, 0xc3, 0xc3, 0xc3, 0xff, 0x7f, 0x00,// a
	0xff, 0xff, 0x30, 0x30, 0x30, 0x30, 0xf0, 0xe0, 0x00, 0x7f, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xff, 0x7f, 0x00,// b
	0xe0, 0xf0, 0x30, 0x30, 0x30, 0x30, 0x70, 0x60, 0x00, 0x7f, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xe0, 0x60, 0x00,// c
	0xe0, 0xf0, 0x30, 0x30, 0x30, 0x30, 0xff, 0xff, 0x00, 0x7f, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xff, 0x7f, 0x00,// d
	0xe0, 0xf0, 0x30, 0x30, 0x30, 0x30, 0xf0, 0xe0, 0x00, 0x7f, 0xff, 0xcc, 0xcc, 0xcc, 0xcc, 0xcf, 0xcf, 0x00,// e
	0xfe, 0xff, 0xc3, 0xc3, 0xc3, 0x03, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, // f
	0xe0, 0xf0, 0x30, 0x30, 0x30, 0x30, 0xf0, 0xf0, 0x00, 0xc7, 0xcf, 0xcc, 0xcc, 0xcc, 0xcc, 0xff, 0x7f, 0x00,// g
	0xff, 0xff, 0x30, 0x30, 0x30, 0x30, 0xf0, 0xe0, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00,// h
	0xf3, 0xf3, 0x00, 0xff, 0xff, 0x00, // i
	0x00, 0x00, 0x00, 0xf3, 0xf3, 0x00, 0xc0, 0xc0, 0xc0, 0xff, 0x7f, 0x00, // j
	0xff, 0xff, 0x00, 0x00, 0x80, 0x80, 0xf0, 0x70, 0x00, 0xff, 0xff, 0x03, 0x03, 0x07, 0x07, 0xfc, 0xf8, 0x00,// k
	0xff, 0xff, 0x00, 0xff, 0xff, 0x00, // l
	0xe0, 0xf0, 0xf0, 0xc0, 0xc0, 0xf0, 0xf0, 0xe0, 0x00, 0xff, 0xff, 0x00, 0x03, 0x03, 0x00, 0xff, 0xff, 0x00,// m
	0xe0, 0xf0, 0x30, 0x30, 0x30, 0x30, 0xf0, 0xe0, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00,// n
	0xe0, 0xf0, 0x30, 0x30, 0x30, 0x30, 0xf0, 0xe0, 0x00, 0x7f, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xff, 0x7f, 0x00,// o
	0xf0, 0xf0, 0x30, 0x30, 0x30, 0x30, 0xf0, 0xe0, 0x00, 0xff, 0xff, 0x0c, 0x0c, 0x0c, 0x0c, 0x0f, 0x07, 0x00,// p
	0xe0, 0xf0, 0x30, 0x30, 0x30, 0x30, 0xf0, 0xf0, 0x00, 0x07, 0x0f, 0x0c, 0x0c, 0x0c, 0x0c, 0xff, 0xff, 0x00,// q
	0xe0, 0xf0, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,// r
	0xe0, 0xf0, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00, 0xc3, 0xc7, 0xc6, 0xc6, 0xc6, 0xc6, 0xfe, 0x7c, 0x00,// s
	0xff, 0xff, 0x30, 0x30, 0x30, 0x00, 0x7f, 0xff, 0xc0, 0xc0, 0xc0, 0x00,// t
	0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x7f, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xff, 0x7f, 0x00,// u
	0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x0f, 0x3f, 0x7c, 0xe0, 0xe0, 0x7c, 0x3f, 0x0f, 0x00,// v
	0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x7f, 0xff, 0xf0, 0x3c, 0x3c, 0xf0, 0xff, 0x7f, 0x00,// w
	0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0xf0, 0xf9, 0x0f, 0x06, 0x06, 0x0f, 0xf9, 0xf0, 0x00,// x
	0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0xc7, 0xcf, 0xcc, 0xcc, 0xcc, 0xcc, 0xff, 0x7f, 0x00,// y
	0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0xf0, 0xf0, 0x00, 0xe0, 0xf0, 0xd8, 0xcc, 0xc6, 0xc3, 0xc1, 0xc0, 0x00,// z

	0x80, 0xc0, 0xfe, 0x7f, 0x03, 0x03, 0x00, 0x01, 0x03, 0x7f, 0xfe, 0xc0, 0xc0, 0x00, // {
	0xff, 0xff, 0x00, 0xff, 0xff, 0x00,// |
	0x03, 0x03, 0x7f, 0xfe, 0xc0, 0x80, 0x00, 0xc0, 0xc0, 0xfe, 0x7f, 0x03, 0x01, 0x00,// }
	0x80, 0x80, 0x9c, 0x38, 0x70, 0xe0, 0xc0, 0x80, 0x00, 0x01, 0x01, 0x39, 0x1c, 0x0e, 0x07, 0x03, 0x01, 0x00,// ->
	0x80, 0xc0, 0xe0, 0x70, 0x38, 0x9c, 0x80, 0x80, 0x00, 0x01, 0x03, 0x07, 0x0e, 0x1c, 0x39, 0x01, 0x01, 0x00 // <-

};

#endif